---
apiVersion: v1
data:
  ### Aqua database password encoded in base64
  password: UGFzc3dvcmQxCg==
kind: Secret
metadata:
  annotations:
    description: Aqua internal database password secret
  labels:
    deployedby: aqua-yaml
  name: aqua-db
  namespace: aqua
type: Opaque
---
apiVersion: v1
data:
  ### Aqua enforcer token encoded in base64
  token: dG9rZW4=
kind: Secret
metadata:
  annotations:
    description: Aqua Enforcer token secret
  labels:
    deployedby: aqua-yaml
  name: enforcer-token
  namespace: aqua
type: Opaque
---
#Create the storage class for the Aqua Database
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: aqua-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
#Create the volume for the Aqua Database
apiVersion: v1
kind: PersistentVolume
metadata:
  name: aquadb-pv
  namespace: aqua
  labels:
    app: aqua-database
spec:
  storageClassName: aqua-storage
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /tmp/aquadb/
---
#Create the volume for the Aqua Console scan results
apiVersion: v1
kind: PersistentVolume
metadata:
  name: aquaweb-pv
  namespace: aqua
  labels:
    app: aqua-server
spec:
  storageClassName: aqua-storage
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /tmp/aquaweb/
---
#Create service account for aqua gateway
apiVersion: v1
imagePullSecrets:
- name: aqua-registry
kind: ServiceAccount
metadata:
  annotations:
    description: Service account for pulling Aqua images and for Aqua privileged
  labels:
    deployedby: aqua-yaml
  name: aqua-sa
  namespace: aqua
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.example.com/aggregate-to-monitoring: "true"
    deployedby: aqua-yaml
  name: aqua-discovery-cr
  namespace: aqua
rules:
- apiGroups: [""]
  resources: ["nodes", "services", "endpoints", "pods", "deployments", "namespaces","componentstatuses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["*"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aqua-discovery-crb
  namespace: aqua
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aqua-discovery-cr
subjects:
  - kind: ServiceAccount
    name: aqua-sa
    namespace: aqua
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: aqua-db
    deployedby: aqua-yaml
  name: aqua-db
  namespace: aqua
spec:
  ports:
    - port: 5432
  selector:
    app: aqua-db
  type: ClusterIP
---
#Create a PVC for the Aqua Database
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aqua-db-pvc
  namespace: aqua
spec:
  storageClassName: aqua-storage
  volumeMode: Filesystem
  volumeName: aquadb-pv
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
  selector:
    matchLabels:
      app: aqua-database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aqua-db
    deployedby: aqua-yaml
  name: aqua-db
  namespace: aqua
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aqua-db
  template:
    metadata:
      labels:
        app: aqua-db
      name: aqua-db
      namespace: aqua
    spec:
      serviceAccount: aqua-sa
      restartPolicy: Always
      containers:
      - name: aqua-db
        image: registry.aquasec.com/database:5.0
        imagePullPolicy: IfNotPresent
        ### Privileged - Next 2 lines - Specifically for OpenShift
        securityContext:
          privileged: true
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-db
        ports:
        - containerPort: 5432
          protocol: TCP
      volumes:
      - name: postgres-db
        persistentVolumeClaim:
          claimName: aqua-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: aqua-web
  namespace: aqua
  labels:
    app: aqua-web
spec:      
  ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
      name: aqua-web-ssl
    - port: 8080
      protocol: TCP
      targetPort: 8080
      name: aqua-web
  selector:
    app: aqua-web
  type: LoadBalancer
---
#Create a PVC for the scanner results
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: aqua-web-pvc
  namespace: aqua
spec:
  storageClassName: aqua-storage
  volumeMode: Filesystem
  volumeName: aquaweb-pv
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
  selector:
    matchLabels:
      app: aqua-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aqua-web
  name: aqua-web
  namespace: aqua
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aqua-web
  template:
    metadata:
      labels:
        app: aqua-web
      name: aqua-web
    spec:
      ### Non-Privileged - Next 4 lines
      #securityContext:
      #  runAsUser: 11431
      #  runAsGroup: 11433
      #  fsGroup: 11433
      serviceAccount: aqua-sa
      restartPolicy: Always
      containers:
      - env:
        - name: AQUA_CLUSTER_MODE
          value: active-active
        - name: AQUA_CONSOLE_RAW_SCAN_RESULTS_STORAGE_SIZE
          value: "4"
        - name: AQUA_PUBSUB_DBHOST
          value: aqua-db
        - name: AQUA_PUBSUB_DBNAME
          value: aqua_pubsub
        - name: AQUA_PUBSUB_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        - name: AQUA_PUBSUB_DBPORT
          value: "5432"
        - name: AQUA_PUBSUB_DBUSER
          value: postgres
        - name: AUTHORIZATION_HEADER
          value: aqua-auth
        - name: BATCH_INSTALL_GATEWAY
          value: aqua-gateway
        - name: BATCH_INSTALL_NAME
          value: aqua-batch-install-default
        - name: BATCH_INSTALL_ORCHESTRATOR
          value: Kubernetes
        - name: BATCH_INSTALL_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: enforcer-token
        - name: CYBERCENTER_ADDR
          value: https://cybercenter5-dev.aquasec.com
        - name: SCALOCK_AUDIT_DBHOST
          value: aqua-db
        - name: SCALOCK_AUDIT_DBNAME
          value: slk_audit
        - name: SCALOCK_AUDIT_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        - name: SCALOCK_AUDIT_DBPORT
          value: "5432"
        - name: SCALOCK_AUDIT_DBSSL
          value: require
        - name: SCALOCK_AUDIT_DBUSER
          value: postgres
        - name: SCALOCK_DBHOST
          value: aqua-db
        - name: SCALOCK_DBNAME
          value: scalock
        - name: SCALOCK_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        - name: SCALOCK_DBPORT
          value: "5432"
        - name: SCALOCK_DBSSL
          value: require
        - name: SCALOCK_DBUSER
          value: postgres
        - name: SCALOCK_LOG_LEVEL
          value: DEBUG
        image: registry.aquasec.com/console:5.0
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
        imagePullPolicy: IfNotPresent
        ### Privileged - Next 2 lines
        securityContext:
          privileged: true
        name: aqua-web
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-socket-mount
        - mountPath: /opt/aquasec/raw-scan-results
          name: aqua-raw-scan-results
      volumes:
      - name: docker-socket-mount
        hostPath:
          path: /var/run/docker.sock
      - name: aqua-raw-scan-results
        persistentVolumeClaim:
          claimName: aqua-web-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: aqua-gateway
  namespace: aqua
  labels:
    app: aqua-gateway
spec:
  type: ClusterIP
  ports:
    - port: 8443
      protocol: TCP
      targetPort: 8443
      name: aqua-gateway-ssl
    - port: 3622
      protocol: TCP
      targetPort: 3622
      name: aqua-gateway
  selector:
    app: aqua-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: aqua-gateway
  name: aqua-gateway
  namespace: aqua
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aqua-gateway
  template:
    metadata:
      labels:
        app: aqua-gateway
      name: aqua-gateway
    spec:
      ### Non-Privileged next 4 lines
      securityContext:
        runAsUser: 11431
        runAsGroup: 11433
        fsGroup: 11433
      serviceAccount: aqua-sa
      restartPolicy: Always
      containers:
      - name: aqua-gateway
        image: registry.aquasec.com/gateway:5.0
        imagePullPolicy: IfNotPresent
        ### Privileged next 2 lines
        #securityContext:
        #  privileged: true
        env:
        - name: AQUA_CONSOLE_SECURE_ADDRESS
          value: aqua-web:443
        - name: SCALOCK_GATEWAY_PUBLIC_IP
          value: aqua-gateway
        - name: SCALOCK_DBUSER
          value: postgres
        - name: SCALOCK_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        - name: SCALOCK_DBNAME
          value: scalock
        - name: SCALOCK_DBHOST
          value: aqua-db
        - name: SCALOCK_DBPORT
          value: "5432"
        - name: SCALOCK_AUDIT_DBUSER
          value: postgres
        - name: SCALOCK_AUDIT_DBPASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: aqua-db
        - name: SCALOCK_AUDIT_DBNAME
          value: slk_audit
        - name: SCALOCK_AUDIT_DBHOST
          value: aqua-db
        - name: SCALOCK_AUDIT_DBPORT
          value: "5432"
        - name: HEALTH_MONITOR
          value: 0.0.0.0:8000
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        ports:
        - containerPort: 3622
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        - containerPort: 8000
          protocol: TCP
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: aqua-agent
  name: aqua-agent
  namespace: aqua
spec:
  selector:
    matchLabels:
      app: aqua-agent
  template:
    metadata:
      labels:
        app: aqua-agent
      name: aqua-agent
      namespace: aqua
    spec:
      containers:
      - env:
        - name: AQUA_INSTALL_PATH
          value: /var/lib/aquasec
        - name: AQUA_SERVER
          value: aqua-gateway:8443
        - name: AQUA_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: enforcer-token
        - name: RESTART_CONTAINERS
          value: "no"
        image: registry.aquasec.com/agent:5.0
        imagePullPolicy: Always
        name: aqua-agent
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run
          name: var-run
        - mountPath: /dev
          name: dev
        - mountPath: /host/sys
          name: sys
          readOnly: true
        - mountPath: /host/proc
          name: proc
          readOnly: true
        - mountPath: /host/etc
          name: etc
          readOnly: true
        - mountPath: /host/opt/aquasec
          name: aquasec
          readOnly: true
        - mountPath: /opt/aquasec/tmp
          name: aquasec-tmp
        - mountPath: /opt/aquasec/audit
          name: aquasec-audit
        - mountPath: /data
          name: aquasec-data
      dnsPolicy: ClusterFirst
      hostPID: true
      imagePullSecrets:
      - name: aqua-registry
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: aqua-sa
      serviceAccountName: aqua-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /var/run
          type: ""
        name: var-run
      - hostPath:
          path: /dev
          type: ""
        name: dev
      - hostPath:
          path: /sys
          type: ""
        name: sys
      - hostPath:
          path: /proc
          type: ""
        name: proc
      - hostPath:
          path: /etc
          type: ""
        name: etc
      - hostPath:
          path: /var/lib/aquasec
          type: ""
        name: aquasec
      - hostPath:
          path: /var/lib/aquasec/tmp
          type: ""
        name: aquasec-tmp
      - hostPath:
          path: /var/lib/aquasec/audit
          type: ""
        name: aquasec-audit
      - hostPath:
          path: /var/lib/aquasec/data
          type: ""
        name: aquasec-data
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
